import{ba as p,q as s,B as w,C as f,F as g,bY as y,a as k,y as b,ch as R}from"./entry.6470c283.js";const i=p({});function _(){const t=s.value?.account.id,c=w(),a=f(c,"client"),l=f(c,"canStreaming");async function d(){if(!t||!i[t])return;const n=i[t][1][0];i[t][1]=[],n&&await a.value.v1.markers.create({notifications:{lastReadId:n}})}async function v(){if(!b.value||!t||i[t]||!s.value?.token)return;let n;const u=new Promise(e=>n=e);i[t]=[u,[]],await R(l).toBe(!0),a.value.v1.stream.streamUser().then(n),u.then(e=>e.on("notification",o=>{i[t]&&i[t][1].unshift(o.id)}));const m=await a.value.v1.markers.fetch({timeline:["notifications"]}),h=a.value.v1.notifications.list({limit:30});do{const e=await h.next();if(!e.done&&e.value.length)for(const o of e.value){if(o.id===m.notifications.lastReadId)return;i[t][1].push(o.id)}else break}while(!0)}function r(){!t||!i[t]||(i[t][0].then(n=>n.disconnect()),i[t]=void 0)}return g(s,r),y(()=>{v()}),{notifications:k(()=>t?i[t]?.[1].length??0:0),disconnect:r,clearNotifications:d}}export{_ as u};
